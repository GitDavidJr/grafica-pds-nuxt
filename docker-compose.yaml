version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      # Adiciona uma configuração para maior tempo limite durante a construção
      args:
        - NPM_CONFIG_LOGLEVEL=${NPM_LOGLEVEL:-info}
    container_name: grafica_pds_nuxt
    environment:
      # Usando DATABASE_URL diretamente do Coolify
      - DATABASE_URL=${DATABASE_URL}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-grafica_pds}
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - NPM_CONFIG_LOGLEVEL=${NPM_LOGLEVEL:-info}
      # Adiciona configuração do Prisma
      - PRISMA_SCHEMA_PATH=/app/server/prisma/schema.prisma
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - grafica_network
    # Adiciona configurações de saúde e memória
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 40s
    mem_limit: 1g

  postgres:
    image: postgres:15-alpine
    container_name: grafica_pds_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-grafica_pds}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - grafica_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-grafica_pds}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  grafica_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
